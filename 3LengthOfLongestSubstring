//解法一
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int m[256]={0}, res = 0, left = 0;
        for(int i = 0; i < s.size(); ++i){
            if(m[s[i]] == 0 || m[s[i]] < left){
                res = max(res,i-left+1);
            }else{
                left = m[s[i]];
            }
            m[s[i]] = i+1;
        }
        return res;
    }
};

//解法二
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int res = 0, left = 0, i = 0, n = s.size();
        unordered_set<char>t;
        
        while(i<n){
            if(!t.count(s[i])){
                t.insert(s[i++]);
                res = max(res,(int)t.size());
            }else{
                t.erase(s[left++]);
            }
        }
        return res;
    }
};
